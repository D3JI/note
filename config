freebsd安装手记
启动的时候在beastie那里输入6，然后对Ok回答：
set hint.atkbd.0.flags="0x1"
boot
如果碰到
panic y/n? [y] panic: bye-bye
cpuid = 0  
则：
unload
set currdev=disk0s1a:
boot 
安装完成后，在/boot/loader.conf里面加入：
hint.atkbd.0.flags="0x1"

1,选择最小安装，选择定制，选择man,ports
  所有的设置，除了设置密码，都选否。安装完毕，取出光盘，重启
2，#vi /etc/make.conf 
#############################################################
MASTER_SITE_BACKUP?=\
ftp://ftp.freebsd.org.cn/pub/FreeBSD/ports/distfiles/${DIST_SUBDIR}/\
http://ports.cn.freebsd.org/${DIST_SUBDIR}/
MASTER_SITE_OVERRIDE?=${MASTER_SITE_BACKUP}
############################################################
3，#hostname www.rorforge.org
   #vi /etc/rc.conf 
   输入： hostname="www.rorforge.org"
          defaultrouter="192.168.2.1"
          或者是，根据机器的不同,首先运行命令  ifconfig ，查看网卡的名字是什么
          ifconfig_rl0="inet 192.168.2.11 netmask 255.255.255.0"
          ifconfig_em0="inet 192.168.2.11 netmask 255.255.255.0"
   #vi /etc/resolv.conf
   输入： nameserver 202.102.134.68
   重启，可以上网
4, #portsnap fetch extract  更新包管理器
   #cd /usr/ports/x11/xorg
   #make install clean
   #rehash
   #Xorg -configure
   #cp /root/xorg.conf.new /etc/X11/xorg.conf
   #vi /etc/X11/xorg.conf
   在ServerLayout里加上一行 Option "AllowEmptyInput" "off"
   #startx查看XORG配置是否成功。
5, #cd /usr/ports/x11-wm/xfce4
   #make install clean
   #which startxfce4
   #echo "/usr/local/bin/startxfce4" > ~/.xinitrc
6, #cd /usr/ports/www/firefox3
   #make install clean
7, #adduser  添加用户，选csh，并登陆
9, #cd /usr/ports/chinese/fcitx
   #make install clean
   #vi ~/.xinitrc
   输入： LC_CTYPE=zh_CN.eucCN
          XMODIFIERS='@im=fcitx'
          export LC_CTYPE XMODIFIERS
          fcitx &
10,改善字体
   准备simsun.ttc
   #mkdir /usr/local/lib/X11/fonts/TrueType
   #cp simsun.ttc /usr/local/lib/X11/fonts/TrueType  
   #vi /etc/X11/xorg.conf 
   添加 FontPath "/usr/local/lib/X11/fonts/TrueType" 
   删除其他 FontPath
   #fc-cache -f -v
   至此，freebsd桌面调好，输入法中文，字体合格





在freebsd下安装ROR开发环境
1, 安装mysql
   cd /usr/ports/databases/mysql51-server
   make WITH_CHARSET=utf8 WITH_XCHARSET=all install clean
   安装mysql基础表
   #/usr/local/mysql/bin/mysql_install_db --user=mysql
   添加必要的用户
   # mysqld_safe &
     mysqladmin -u root password 'localpassword'
   复制必要的配置文件
   # cp /usr/local/share/mysql/my-medium.cnf /var/db/mysql/my.cnf
   设置mysql开机启动
   #vi /etc/rc.conf
   添加 mysql_enable="YES"
   重启mysql
   # /usr/local/etc/rc.d/mysql-server restart
   检查一下mysql，是否成功安装
   # mysqlshow -p

2，安装ruby
   # cd /usr/ports/lang/ruby18
   # make install clean 
3, 安装ruby的编码转换
   cd/usr/ports/converters/ruby-iconv
   make install clean
4, 因为包里的gem不是最新版，所以手动下载安装
   http://rubyforge.org/frs/download.php/45905/rubygems-1.3.1.tgz
   #tar -zxvf rubygems-1.3.1.tgz
   #cd rubygems-1.3.1
   #ruby setup.rb
   #mv /usr/local/bin/gem18 /usr/local/bin/gem
   #rehash
5, 使用gem安装rails以及ruby的mysql库
   gem install rails mysql
6, 安装 ImageMagick
   # cd /usr/ports/graphics/ImageMagick/
   # make install clean
   # rehash
   # convert --version
7, 安装RMagic
   # tar xvjf RMagick-2.9.1-tar.bz2  
   # ruby setup.rb
   # ruby setup.rb install
8, 因为ports里的vim不是最新的，所以手动下载安装
   # tar -zxvf vim2.tar.gz2
   # cd vim72/src
   # make 
   # make install
9, #cd /usr/ports/devel/git 
   #make install clean
   去用户的主目录
   mkdir .vim
   cd .vim
   git clone git
大功告成


在freebsd上使用github管理项目
在github上创建项目的过程。
如果没有.ssh文件夹，则执行下面命令
$ssh-keygen -t rsa              按3个回车，采用默认设置
进入~/.ssh文件夹，复制 id_rsa.pub文件里面的内容。注册时使用。
2.进入github，注册，填上你的copy的ssh.

git log
git status
git grep "xxxx"
git tag v2.43 //给这个commit起了一个简单的名字v2.43
git-whatchanged -p master..bobworks
///////提交你的项目
git init
git add .
git commit -m '介绍'
///////给自己起别名，这个别名是内定的哦
git remote add origin git@github.com:Flag/test.git
git push origin master
///////给为你提交源的成员起别名，方面使用
git remote add apple git://.git
git remote add xuchao git://.git
//////为你的成员分别建立分支
git branch apple
git branch xuch
//////如果要导入成员的成果，先进入分支，再拉成员的分支
git checkout apple
git pull apple myror
///////如果对他的成果满意，就进入到master里合并
git checkout master
git merge apple
////////如果有冲突，就打开个新的窗口编辑那些文件吧，注意，编辑完了要用git commit -m ""来提交更改哦
//////一切OK，就提交吧，提交到哪里了呢？内定的别名啊，哈哈
git push

1. git remote 的常有参数的简介
    git remote add <name> <url> 给远程的 source（资源项目） 起别名
         例如：git remote add origin git://github.com/flag/jok.git
    git remote rm <name> 删除 别名
    git remote show <name> 显示 每个别名中的信息
    git remote prune <name> （未知）
    git remote update [group] 更新信息
    -v, --verbose 查看所有详情（查看name 对应的 url）


附Rails下面的快捷键。vim下的rails开发，有一个rails.vim就够了.
必备命令
:ls
:b 数字
:Exp 打开当前文件所在的目录
:ctrl+w hjll  在窗口中跳转
gf  跳转到类文件

:Rails  生成rails程序
:Rgen   对应generate命令
:Rdestroy
:Rconsole
:Rserver! 强制关闭其他相同端口的服务，并启动服务
:Rextract 漂亮的命令
:Rabbrev  列出所有rails所写。非常好的功能，提高写命令的效率60%	
:Rabbrev {abbr} {expn} [{extra}]	添加一个快捷键，如：”Rabbrev :a :action\ =>\	“	
:Rabbrev! {abbr}	Remove an abbreviation. 删除一个快捷键
:Rspec						|rails-:Rspec|
:Rmodel				       |rails-:Rmodel|
:Rmigration					|rails-:Rmigration|
:Robserver					|rails-:Robserver|
:Rfixtures					|rails-:Rfixtures|
:Runittest					|rails-:Runittest|

:Rcontroller					|rails-:Rcontroller|
:Rhelper					|rails-:Rhelper|
:Rview						|rails-:Rview|
:Rlayout					|rails-:Rlayout|
:Rfunctionaltest				|rails-:Rfunctionaltest|



Ubuntu下RMagic安装
# 安装ImageMagick
apt-get install imagemagick
apt-get install libmagick9-dev ruby1.8-dev
gem install rmagick
# 说明：如果出现问题或者错误请执行下面命令
apt-get remove --purge libmagick9-dev

root# mkdir /usr/local/pgsql/data
root# chown postgres /usr/local/pgsql/data
root# su postgres
postgres$ initdb -D /usr/local/pgsql/data

cd /usr/ports/databases/postgresql81-server
make install clean
mkdir /usr/local/pgsql/data
adduser aa
chown aa /usr/local/pgsql/data
initdb -D /usr/lcoal/pgsql/data
postmaster -D /usr/lcoal/pgsql/data
createdb test
dropdb test 

安装PostgreSQL8.3
用PREFIX指定安装路径/home/developer/opt/postgresql
#cd /usr/ports/databases/postgresql83-server
#make install clean PREFIX=/home/developer/opt/postgresql
建立pgsql数据库位置
#mkdir /home/developer/opt/postgresql/pgsql/data
#su root
#chown -R pgsql /home/developer/opt/postgresql/pgsql/data
启动postgresql
#/home/developer/opt/postgresql/bin/pg_ctl -D /home/developer/opt/postgresql/pgsql/data
开机启动postgresql
#cp /home/developer/opt/postgresql/etc/rc.d/postgresql /usr/local/etc/rc.d/
在/etc/rc.conf中加入：
postgresql_enable="YES"
postgresql_data="/home/developer/opt/postgresql/pgsql/data"
postgresql_flags="-w -s -m fast"
postgresql_initdb_flags="--encoding=utf-8 --lc-collate=C"
postgresql_class="default"